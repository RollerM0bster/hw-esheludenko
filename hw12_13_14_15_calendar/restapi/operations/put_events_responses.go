// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/RollerM0bster/hw-esheludenko/hw12_13_14_15_calendar/models"
	"github.com/go-openapi/runtime"
)

// PutEventsNoContentCode is the HTTP code returned for type PutEventsNoContent
const PutEventsNoContentCode int = 204

/*
PutEventsNoContent Событие успешно обновлено

swagger:response putEventsNoContent
*/
type PutEventsNoContent struct {
}

// NewPutEventsNoContent creates PutEventsNoContent with default headers values
func NewPutEventsNoContent() *PutEventsNoContent {

	return &PutEventsNoContent{}
}

// WriteResponse to the client
func (o *PutEventsNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PutEventsInternalServerErrorCode is the HTTP code returned for type PutEventsInternalServerError
const PutEventsInternalServerErrorCode int = 500

/*
PutEventsInternalServerError Ошибка

swagger:response putEventsInternalServerError
*/
type PutEventsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutEventsInternalServerError creates PutEventsInternalServerError with default headers values
func NewPutEventsInternalServerError() *PutEventsInternalServerError {

	return &PutEventsInternalServerError{}
}

// WithPayload adds the payload to the put events internal server error response
func (o *PutEventsInternalServerError) WithPayload(payload *models.Error) *PutEventsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put events internal server error response
func (o *PutEventsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutEventsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
